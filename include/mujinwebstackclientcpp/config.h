/** \file config.h
    \brief Defines MUJIN Controller Client installation-specific information.
*/
#ifndef MUJINWEBSTACKCLIENT_DEFINITIONS_H
#define MUJINWEBSTACKCLIENT_DEFINITIONS_H

#if defined(_WIN32) || defined(__CYGWIN__) || defined(_MSC_VER)
  #define MUJINWEBSTACKCLIENT_HELPER_DLL_IMPORT __declspec(dllimport)
  #define MUJINWEBSTACKCLIENT_HELPER_DLL_EXPORT __declspec(dllexport)
  #define MUJINWEBSTACKCLIENT_HELPER_DLL_LOCAL
#else
  #if __GNUC__ >= 4
    #define MUJINWEBSTACKCLIENT_HELPER_DLL_IMPORT __attribute__ ((visibility("default")))
    #define MUJINWEBSTACKCLIENT_HELPER_DLL_EXPORT __attribute__ ((visibility("default")))
    #define MUJINWEBSTACKCLIENT_HELPER_DLL_LOCAL  __attribute__ ((visibility("hidden")))
  #else
    #define MUJINWEBSTACKCLIENT_HELPER_DLL_IMPORT
    #define MUJINWEBSTACKCLIENT_HELPER_DLL_EXPORT
    #define MUJINWEBSTACKCLIENT_HELPER_DLL_LOCAL
  #endif
#endif

// Now we use the generic helper definitions above to define MUJINWEBSTACKCLIENT_API and MUJINWEBSTACKCLIENT_LOCAL.
// MUJINWEBSTACKCLIENT_API is used for the public API symbols. It either DLL imports or DLL exports (or does nothing for static build)
// MUJINWEBSTACKCLIENT_LOCAL is used for non-api symbols.
#if defined(MUJINWEBSTACKCLIENT_DLL) || defined(MUJINWEBSTACKCLIENT_CORE_DLL) // defined if OpenRAVE is compiled as a DLL
  #ifdef MUJINWEBSTACKCLIENT_DLL_EXPORTS // defined if we are building the OpenRAVE DLL (instead of using it)
    #define MUJINWEBSTACKCLIENT_API MUJINWEBSTACKCLIENT_HELPER_DLL_EXPORT
  #else
    #define MUJINWEBSTACKCLIENT_API MUJINWEBSTACKCLIENT_HELPER_DLL_IMPORT
  #endif // MUJINWEBSTACKCLIENT_DLL_EXPORTS
  #define MUJINWEBSTACKCLIENT_LOCAL MUJINWEBSTACKCLIENT_HELPER_DLL_LOCAL
#else // MUJINWEBSTACKCLIENT_DLL is not defined: this means OpenRAVE is a static lib.
  #define MUJINWEBSTACKCLIENT_API
  #define MUJINWEBSTACKCLIENT_LOCAL
#endif // MUJINWEBSTACKCLIENT_DLL

#define MUJINWEBSTACKCLIENT_VERSION_MAJOR 0
#define MUJINWEBSTACKCLIENT_VERSION_MINOR 65
#define MUJINWEBSTACKCLIENT_VERSION_PATCH 0
#define MUJINWEBSTACKCLIENT_VERSION_COMBINED(major, minor, patch) (((major) << 16) | ((minor) << 8) | (patch))
#define MUJINWEBSTACKCLIENT_VERSION MUJINWEBSTACKCLIENT_VERSION_COMBINED(MUJINWEBSTACKCLIENT_VERSION_MAJOR, MUJINWEBSTACKCLIENT_VERSION_MINOR, MUJINWEBSTACKCLIENT_VERSION_PATCH)
#define MUJINWEBSTACKCLIENT_VERSION_EXTRACT_MAJOR(version) (((version)>>16)&0xff)
#define MUJINWEBSTACKCLIENT_VERSION_EXTRACT_MINOR(version) (((version)>>8)&0xff)
#define MUJINWEBSTACKCLIENT_VERSION_EXTRACT_PATCH(version) (((version))&0xff)
#define MUJINWEBSTACKCLIENT_VERSION_STRING "0.65.0"
#define MUJINWEBSTACKCLIENT_VERSION_STRING_FORMAT(version) boost::str(boost::format("%s.%s.%s")%(MUJINWEBSTACKCLIENT_VERSION_EXTRACT_MAJOR(version))%(MUJINWEBSTACKCLIENT_VERSION_EXTRACT_MINOR(version))%(MUJINWEBSTACKCLIENT_VERSION_EXTRACT_PATCH(version)))

#define MUJINWEBSTACKCLIENT_VERSION_GE(major1, minor1, patch1, major2, minor2, patch2) (MUJINWEBSTACKCLIENT_VERSION_COMBINED(major1, minor1, patch1) >= MUJINWEBSTACKCLIENT_VERSION_COMBINED(major2, minor2, patch2))
#define MUJINWEBSTACKCLIENT_VERSION_MINIMUM(major, minor, patch) MUJINWEBSTACKCLIENT_VERSION_GE(MUJINWEBSTACKCLIENT_VERSION_MAJOR, MUJINWEBSTACKCLIENT_VERSION_MINOR, MUJINWEBSTACKCLIENT_VERSION_PATCH, major, minor, patch)

// whether log4cxx is to be used
#define MUJINWEBSTACKCLIENT_LOG4CXX 1
#define MUJIN_USEZMQ 

#endif
